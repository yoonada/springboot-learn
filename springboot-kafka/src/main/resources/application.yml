server:
  port: 20001
spring:
  application:
    name: springboot-kafka
  kafka:
    bootstrap-servers: 43.142.62.156:9092
    producer:
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      batch-size: 16384
      # 生产端缓冲区大小
      buffer-memory: 33554432
      # 重试次数，设置大于0的值，则客户端会将发送失败的记录重新发送
      retries: 0
      # 指定消息key的编码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 指定消息体的编码方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 默认的消费组id
      group-id: springboot-kafka-test-group
      # 是否自动提交offset
      enable-auto-commit: true
      # 提交offset延时（接收到消息后多久提交offset）
      auto-commit-interval: 100
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer